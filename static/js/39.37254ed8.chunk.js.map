{"version":3,"file":"static/js/39.37254ed8.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/AddContactForm/AddContactForm.jsx","components/ContactsListItem/ContactListItemStyled.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","components/EditContactForm/EditContactForm.jsx","components/Message/Message.jsx","components/Message/AnimatedMessage.jsx","components/ModalWindow/ModalWindow.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectFilteredContacts = ({ contacts }) => {\n  if (!contacts.filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = contacts.filter.toLowerCase();\n\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import React from 'react';\nimport InputMask from 'react-input-mask';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst defaultTheme = createTheme();\n\nconst AddContactForm = ({ setOpenModal, setMessage }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleAddContactFormSubmit = event => {\n    event.preventDefault();\n    let isDuplicate = false;\n\n    const contact = new FormData(event.currentTarget);\n    const contactForCheck = {\n      name: contact.get('name'),\n      number: contact.get('phone'),\n    };\n    //Search if such contact is already exist\n    contacts.forEach(contact => {\n      if (\n        contact.name.toLowerCase() === contactForCheck.name.toLowerCase() ||\n        contact.number.toLowerCase() === contactForCheck.number.toLowerCase()\n      ) {\n        isDuplicate = true;\n      }\n    });\n    if (isDuplicate) {\n      setMessage({ message: 'Such contact is already exist', type: 'error' });\n      setTimeout(() => {\n        setMessage(null);\n      }, 2000);\n      return;\n    }\n    //______________________________________________________________________\n    dispatch(\n      addContact({\n        name: contact.get('name'),\n        number: contact.get('phone'),\n      })\n    );\n    setOpenModal(false);\n    setMessage({ type: 'success', message: 'Contact added successfully!' });\n    setTimeout(() => {\n      setMessage(null);\n    }, 2000);\n  };\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: '5px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <PersonAddIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            New contact\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleAddContactFormSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Contact name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n            />\n            <InputMask mask=\"+38 (099) 999-99-99\">\n              {inputProps => (\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"phone\"\n                  label=\"Phone number\"\n                  type=\"text\"\n                  id=\"phone\"\n                />\n              )}\n            </InputMask>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Add contact\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\"></Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default AddContactForm;\n","import styled from '@emotion/styled';\nimport Card from '@mui/material/Card';\n\nexport const StyledCard = styled(Card)`\n  width: 100%;\n  border-radius: 5px;\n  &:hover {\n    box-shadow: 0px 0px 0px 2px rgba(33, 149, 243, 1);\n  }\n`;\n","import * as React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ImageIcon from '@mui/icons-material/Image';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CardContent from '@mui/material/CardContent';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { StyledCard } from './ContactListItemStyled';\n\nconst ContactsListItem = ({ editContact, name, number, id, setMessage }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContactButtonClick = () => {\n    dispatch(deleteContact(id));\n    setMessage({ message: 'Contact successfully deleted', type: 'success' });\n    setTimeout(() => {\n      setMessage(null);\n    }, 2000);\n  };\n  return (\n    <Grid item xs={2} sm={4} md={4}>\n      <StyledCard sx={{ minWidth: 100 }}>\n        <CardContent\n          sx={{\n            position: 'relative',\n            transition: '0.3s ease-in',\n          }}\n        >\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <ImageIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={name} secondary={number} />\n          </ListItem>\n          <Container\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              gap: '10px',\n            }}\n          >\n            <Button\n              onClick={() => {\n                editContact(id, name, number);\n              }}\n              variant=\"outlined\"\n              color=\"success\"\n            >\n              <EditIcon />\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"error\"\n              onClick={handleDeleteContactButtonClick}\n            >\n              <CancelIcon />\n            </Button>\n          </Container>\n        </CardContent>\n      </StyledCard>\n    </Grid>\n  );\n};\n\nexport default ContactsListItem;\n","import * as React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport ContactsListItem from 'components/ContactsListItem/ContactsListItem';\n\nexport const ContactsList = ({ editContact, contacts, setMessage }) => {\n  return (\n    <>\n      <Box sx={{ flexGrow: 1, p: '20px' }}>\n        <Grid\n          container\n          spacing={{ xs: 2, md: 3 }}\n          columns={{ xs: 2, sm: 8, md: 12 }}\n        >\n          {contacts.map(({ id, name, number }) => (\n            <ContactsListItem\n              key={id}\n              name={name}\n              number={number}\n              id={id}\n              editContact={editContact}\n              setMessage={setMessage}\n            ></ContactsListItem>\n          ))}\n        </Grid>\n      </Box>\n    </>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport InputMask from 'react-input-mask';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { editContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst defaultTheme = createTheme();\n\nconst EditContactForm = ({ setMessage, setOpenModal, id, name, number }) => {\n  const [nameInputValue, setNameInputValue] = useState(name);\n  const [numberInputValue, setNumberInputValue] = useState(number);\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleEditContactFormSubmit = async event => {\n    event.preventDefault();\n    let isDuplicate = false;\n    const contactForCheck = {\n      name: nameInputValue,\n      number: numberInputValue,\n    };\n    //Search if such contact is already exist\n\n    contacts.forEach(contact => {\n      if (\n        contact.id !== id &&\n        (contact.name.toLowerCase() === contactForCheck.name.toLowerCase() ||\n          contact.number.toLowerCase() === contactForCheck.number.toLowerCase())\n      ) {\n        isDuplicate = true;\n      }\n    });\n    if (isDuplicate) {\n      setMessage({ message: 'Such contact is already exist', type: 'error' });\n      setTimeout(() => {\n        setMessage(null);\n      }, 2000);\n      return;\n    }\n    //______________________________________________________________________\n\n    await dispatch(\n      editContact({\n        id,\n        contactData: {\n          name: nameInputValue,\n          number: numberInputValue,\n        },\n      })\n    );\n    setOpenModal(false);\n\n    dispatch(fetchContacts());\n    setMessage({ type: 'success', message: 'Contact edited successfully!' });\n    setTimeout(() => {\n      setMessage(null);\n    }, 2000);\n  };\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: '5px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <ManageAccountsIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Edit contact\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleEditContactFormSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Contact name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n              value={nameInputValue}\n              onChange={event => {\n                setNameInputValue(event.target.value);\n              }}\n            />\n            <InputMask\n              mask=\"+38 (099) 999-99-99\"\n              value={numberInputValue}\n              onChange={event => {\n                setNumberInputValue(event.target.value);\n              }}\n            >\n              {inputProps => (\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"phone\"\n                  label=\"Phone number\"\n                  type=\"text\"\n                  id=\"phone\"\n                />\n              )}\n            </InputMask>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Edit contact\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\"></Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default EditContactForm;\n","import React from 'react';\n\nimport Alert from '@mui/material/Alert';\n\nconst Message = ({ message, type = 'error' }) => {\n  return (\n    <Alert\n      severity={type}\n      sx={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%)',\n        transition: 'all 0.5s linear',\n        zIndex: '9999',\n      }}\n    >\n      {message}\n    </Alert>\n  );\n};\n\nexport default Message;\n","import { createPortal } from 'react-dom';\n\nimport { animated, useSpring } from '@react-spring/web';\n\nimport Message from './Message';\n\nfunction AnimatedMessage({ message, type }) {\n  const [props] = useSpring(\n    () => ({\n      from: { opacity: 0 },\n      to: { opacity: 1 },\n    }),\n    []\n  );\n\n  return createPortal(\n    <animated.div style={props}>\n      <Message message={message} type={type} />\n    </animated.div>,\n    document.querySelector('#message-root')\n  );\n}\nexport default AnimatedMessage;\n","import * as React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  pt: 2,\n  px: 4,\n  pb: 3,\n};\n\nexport const ModalWindow = ({ openModal, handleModalState, children }) => {\n  return createPortal(\n    <div>\n      <Modal\n        open={openModal}\n        onClose={() => handleModalState(false)}\n        aria-labelledby=\"parent-modal-title\"\n        aria-describedby=\"parent-modal-description\"\n      >\n        <Box sx={{ ...style, width: 400 }}>{children}</Box>\n      </Modal>\n    </div>,\n    document.querySelector('#message-root')\n  );\n};\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Button, Container, Typography } from '@mui/material';\nimport AddContactForm from 'components/AddContactForm/AddContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport EditContactForm from 'components/EditContactForm/EditContactForm';\nimport AnimatedMessage from 'components/Message/AnimatedMessage';\nimport { ModalWindow } from 'components/ModalWindow/ModalWindow';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectError } from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const [openModal, setOpenModal] = useState(false);\n  const [modalChildren, setModalChildren] = useState(null);\n\n  const error = useSelector(selectError);\n\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleAddContactButtonClick = () => {\n    setOpenModal(true);\n    setModalChildren(\n      <AddContactForm setOpenModal={setOpenModal} setMessage={setMessage} />\n    );\n  };\n  const handleEditContactButtonClick = (id, name, number) => {\n    setOpenModal(true);\n    setModalChildren(\n      <EditContactForm\n        id={id}\n        name={name}\n        number={number}\n        setOpenModal={setOpenModal}\n        setMessage={setMessage}\n      />\n    );\n  };\n  return (\n    <>\n      <Container\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: 'column',\n        }}\n      >\n        <Typography\n          variant=\"h2\"\n          gutterBottom\n          sx={{ textAlign: 'center', pt: '20px' }}\n        >\n          My contacts\n        </Typography>\n        <Button\n          onClick={handleAddContactButtonClick}\n          sx={{ textAlign: 'center', m: '0 20px' }}\n          variant=\"contained\"\n        >\n          Add contact\n        </Button>\n        <ContactsList\n          editContact={handleEditContactButtonClick}\n          contacts={contacts}\n          setMessage={setMessage}\n        />\n      </Container>\n      <ModalWindow\n        openModal={openModal}\n        children={modalChildren}\n        handleModalState={setOpenModal}\n      />\n      {message && !error && (\n        <AnimatedMessage type={message.type} message={message.message} />\n      )}\n      {error && <AnimatedMessage type=\"error\" message=\"Something went wrong\" />}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectError","error","defaultTheme","createTheme","setOpenModal","setMessage","dispatch","useDispatch","useSelector","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","PersonAdd","Typography","variant","onSubmit","event","preventDefault","isDuplicate","contact","FormData","currentTarget","contactForCheck","name","get","number","forEach","toLowerCase","message","type","setTimeout","addContact","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","mask","inputProps","Button","mb","Grid","container","item","xs","Link","href","StyledCard","styled","Card","editContact","sm","md","minWidth","CardContent","position","transition","ListItem","ListItemAvatar","Image","ListItemText","primary","secondary","justifyContent","gap","onClick","color","Edit","deleteContact","Cancel","ContactsList","flexGrow","p","spacing","columns","map","useState","nameInputValue","setNameInputValue","numberInputValue","setNumberInputValue","handleEditContactFormSubmit","contactData","fetchContacts","ManageAccounts","value","onChange","target","Alert","severity","top","left","transform","zIndex","useSpring","from","opacity","to","props","createPortal","style","document","querySelector","width","border","boxShadow","pt","px","pb","ModalWindow","openModal","handleModalState","children","Modal","open","onClose","modalChildren","setModalChildren","useEffect","gutterBottom","textAlign"],"sourceRoot":""}